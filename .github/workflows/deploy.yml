name: Deploy Core-Service

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout c√≥digo
        uses: actions/checkout@v3

      - name: Exibir Vari√°veis de Ambiente (Debug)
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo "üîç Verificando credenciais do Docker..."
          echo "DOCKER_USERNAME: $DOCKER_USERNAME"
          echo "DOCKER_ACCESS_TOKEN length: ${#DOCKER_ACCESS_TOKEN}"

      - name: Verificar se as vari√°veis est√£o vazias
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          if [[ -z "$DOCKER_USERNAME" || -z "$DOCKER_ACCESS_TOKEN" ]]; then
            echo "‚ùå Erro: DOCKER_USERNAME ou DOCKER_ACCESS_TOKEN n√£o est√£o definidos!"
            exit 1
          else
            echo "‚úÖ Vari√°veis carregadas corretamente!"
          fi

      - name: Logar no Docker Hub usando Access Token
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_ACCESS_TOKEN: ${{ secrets.DOCKER_ACCESS_TOKEN }}
        run: |
          echo "$DOCKER_ACCESS_TOKEN" | docker login -u "$DOCKER_USERNAME" --password-stdin

      - name: Construir e empurrar imagem para Docker Hub
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/core-service:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/core-service:latest

      - name: Deploy na VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_SSH_KEY }}
          script: |
            docker pull ${{ secrets.DOCKER_USERNAME }}/core-service:latest

            # Verifica se o container j√° existe antes de parar/remover
            if [ "$(docker ps -q -f name=core_service)" ]; then
              echo "üõë Parando container antigo..."
              docker stop core_service
              docker rm core_service
            else
              echo "‚ö†Ô∏è Nenhum container antigo encontrado, pulando parada/remo√ß√£o."
            fi

            echo "üöÄ Iniciando novo container..."
            docker run -d --name core_service -p 3334:3334 --restart always ${{ secrets.DOCKER_USERNAME }}/core-service:latest
